entryPoints



cs@debian:/opt/ansible$ redis-cli -h node01 -p 6379
node01:6379> ping
PONG
node01:6379> exit


-- shell comand

echo "yes" | kubectl exec -it redis-app-2 -- redis-cli --cluster create --cluster-replicas 1 

$(kubectl get pods -l app=redis -o jsonpath='{range.items[*]}{.status.podIP}:6379 ') -a password





kubectl exec -it redis-app-2 /bin/bash

kubectl get pods -l app=redis -o jsonpath='{range.items[*]}{.status.podIP}:6379\n'



kubectl get pods -l app=redis  -o wide




redis-cli --cluster check 121.21.69.16:6379 --cluster-search-multiple-owners




#指定主节点
echo "yes" | kubectl exec -it redis-app-2 -- redis-cli --cluster create $(kubectl get pods -l app=redis -o jsonpath='{range.items[:3]}{.status.podIP}:6379 ') 

#添加集群从节点
 echo "yes" | kubectl exec -it redis-app-2 -- redis-cli --cluster add-node $(kubectl get pods -l app=redis -o jsonpath='{range.items[3,0]}{.status.podIP}:6379 ')   --cluster-slave
 如果不指定 --cluster-master-id 会随机分配到任意一个主节点

 rm -rf ` find ./  -iname appendonly.aof`



 redis-cli --cluster  reshard  121.21.69.15:6379
 .....
 slots:[0-5460] (5461 slots) master
 ........ =====   5461
 .........
 接收slot槽的主节点id  ===

 数据源节Source node #1====
 Source node #2:done
 
（ps：输入done表示可以开始生成迁移计划）
reshard plan (yes/no)? yes


redis-cli  --cluster reshard 192.168.163.132:6379 \
--cluster-from 117457eab5071954faab5e81c3170600d5192270 \
--cluster-to 815da8448f5d5a304df0353ca10d8f9b77016b28 \
--cluster-slots 10 --cluster-yes \
--cluster-timeout 5000 --cluster-pipeline 10 --cluster-replace

-a 密码
--cluster-simulate   设置该参数，可以模拟rebalance操作，提示用户会迁移哪些slots，而不会真正执行迁移操作。
--cluster-pipeline    默认值为10


 1) (integer) 0
   2) (integer) 5460

2   2) 1) (integer) 5461
   2) (integer) 10922

3) 1) (integer) 10923
   2) (integer) 16383


#查看某个程序使用了那些动态库，使用 ldd命令查看 
ldd /bin/ping

redisV2.sh